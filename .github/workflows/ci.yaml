name: Run Python Scripts and Record Video

on:
  workflow_dispatch:
  schedule:
    - cron: "0 */4 * * *"  # Запуск каждые 4 часа

jobs:
  run-scripts:
    runs-on: ubuntu-latest

    steps:
    # Проверяем репозиторий с кодом
    - name: Checkout code
      uses: actions/checkout@v3

    # Устанавливаем Python
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11.0'

    # Устанавливаем Google Chrome
    - name: Install Google Chrome
      run: |
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable

    # Устанавливаем Xvfb и ffmpeg
    - name: Install Xvfb and ffmpeg
      run: |
        sudo apt-get install -y xvfb ffmpeg

    # Устанавливает зависимости (если есть файл requirements.txt)
    - name: Install dependencies
      run: |
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install selenium
        pip install webdriver-manager

    # Установить переменные окружения
    - name: Set up environment variables
      run: |
        export DISPLAY=:99

    # Запускаем Xvfb
    - name: Start Xvfb
      env:
        DISPLAY: :99  # Используем виртуальный дисплей для захвата
      run: |
        Xvfb :99 -screen 0 1920x1080x24 &
        echo "Xvfb started"

    # Запускаем ffmpeg для записи экрана
    - name: Start screen recording
      env:
        DISPLAY: :99  # Используем виртуальный дисплей для захвата
      run: |
        ffmpeg -y -video_size 1920x1080 -framerate 25 -f x11grab -i :99.0 -c:v libx264 -pix_fmt yuv420p -preset ultrafast -tune zerolatency screen_record.mp4 &
        echo $! > ffmpeg_pid.txt

    # Запуск Python скрипта с Selenium
    - name: Run Python script
      env:
        EMAIL_BIRGE: ${{ secrets.EMAIL_BIRGE }}
        PASS_BIRGE: ${{ secrets.PASS_BIRGE }}
      run: python birge.py

    # Останавливает запись после выполнения скрипта
    - name: Stop recording
      run: |
        kill $(cat ffmpeg_pid.txt)
        sleep 5  # Даем ffmpeg время на корректное завершение

    # Проверяем, что видео файл существует и имеет ненулевой размер
    - name: Check video file
      run: |
        ls -l screen_record.mp4
        file_size=$(stat -c%s "screen_record.mp4")
        if [ $file_size -eq 0 ]; then
          echo "Error: Video file is empty"
          exit 1
        fi

    # Загружает видео как артефакт
    - name: Upload video
      uses: actions/upload-artifact@v3
      with:
        name: screen_record
        path: screen_record.mp4
      if: always()  # Попытка загрузить артефакт даже если предыдущие шаги завершились с ошибкой
